name: Build and Release Plugin

on:
  push:
    branches:
      - dev # Виконується тільки для гілки dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Клонування репозиторію
      - name: Checkout repository
        uses: actions/checkout@v3

      # Налаштування JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17' # Відповідає конфігурації Gradle

      # Збірка проєкту Gradle
      - name: Build with Gradle
        run: ./gradlew shadowJar

      # Отримання повідомлення останнього коміту
      - name: Get Commit Message
        id: commit_message
        run: |
          COMMIT_MSG=$(git log -1 --pretty=format:"%s" | sed 's/[^a-zA-Z0-9_-]/_/g')
          echo "commit_message=$COMMIT_MSG" >> $GITHUB_ENV

      # Пошук згенерованого JAR-файлу
      - name: Rename JAR File to Commit Message
        id: rename_jar
        run: |
          FILE=$(find build/libs -name '*.jar' | head -n 1)
          if [ -z "$FILE" ]; then
            echo "[ERROR] JAR file not found in build/libs!"
            exit 1
          fi
          NEW_NAME="${{ env.commit_message }}.jar"
          mv "$FILE" "build/libs/$NEW_NAME"
          echo "path=build/libs/$NEW_NAME" >> $GITHUB_ENV

      # Створення релізу
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.commit_message }} # Унікальний тег для dev
          release_name: ${{ env.commit_message }}
          body: |
            This is an experimental release of the development branch. It is intended for testing purposes and may include incomplete features or bugs. Please use it with caution and provide feedback if you encounter any issues.
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Завантаження JAR у реліз
      - name: Upload Plugin JAR
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.path }}
          asset_name: ${{ env.commit_message }}.jar
          asset_content_type: application/java-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
