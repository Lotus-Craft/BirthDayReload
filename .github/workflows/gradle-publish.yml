name: Build and Release Plugin

on:
  push:
    branches:
      - dev # Виконується тільки для гілки dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Клонування репозиторію
      - name: Checkout repository
        uses: actions/checkout@v3

      # Налаштування JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17' # Відповідає конфігурації Gradle

      # Збірка проєкту Gradle
      - name: Build with Gradle
        run: ./gradlew shadowJar

      # Перевірка створення JAR
      - name: List files in build/libs
        run: ls -l build/libs

      # Пошук згенерованого JAR-файлу
      - name: Find JAR file
        id: jar
        run: |
          FILE=$(find build/libs -name 'BIRTHDAY-1.0.0-DEV.jar')
          if [ -z "$FILE" ]; then
            echo "JAR file not found!"
            exit 1
          fi
          echo "Found JAR file: $FILE"
          echo "path=$FILE" >> $GITHUB_ENV

      # Перевірка існування JAR-файлу
      - name: Verify JAR file existence
        run: |
          if [ ! -f "${{ env.path }}" ]; then
            echo "JAR file does not exist: ${{ env.path }}"
            exit 1
          else
            echo "JAR file exists: ${{ env.path }}"
          fi

      # Отримання версії з Gradle
      - name: Extract version from build.gradle
        id: get_version
        run: |
          VERSION=$(grep "^version = " build.gradle | awk -F'=' '{print $2}' | xargs)
          if [ -z "$VERSION" ]; then
            echo "Plugin version not found!"
            exit 1
          fi
          echo "Plugin version: $VERSION"
          echo "plugin_version=${VERSION}" >> $GITHUB_ENV

      # Перевірка GITHUB_TOKEN
      - name: Verify GITHUB_TOKEN
        run: |
          if [ -z "${{ secrets.GITHUB_TOKEN }}" ]; then
            echo "GITHUB_TOKEN is not set!"
            exit 1
          else
            echo "GITHUB_TOKEN is set and ready to use."
          fi

      # Діагностика перед створенням релізу
      - name: Debug Environment Variables
        run: |
          echo "Upload URL: ${{ steps.create_release.outputs.upload_url }}"
          echo "Asset Path: ${{ env.path }}"
          echo "Plugin Version: ${{ env.plugin_version }}"

      # Створення релізу
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: dev-${{ github.run_number }} # Унікальний тег для dev
          release_name: BirthDayReload ${{ env.plugin_version }} DEV
          body: |
            Це автоматичний реліз для гілки dev.
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Завантаження JAR у реліз
      - name: Upload Plugin JAR
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.path }}
          asset_name: BirthDayReload-${{ env.plugin_version }}-dev.jar
          asset_content_type: application/java-archive
